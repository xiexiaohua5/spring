<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--    开启注解注入-->
    <context:component-scan base-package="com.qf.hua.spring"/>

    <!--spring：
                重要的功能：给我们创建对象-->

    <!--spring  核心配置文件-->

    <!--id标签是bean的唯一标识，IoC容器中bean的id标签不能重复，否则报错。-->
    <!--class属性是bean常用属性，为bean的全限定类名，指向classpath下类定义所在位置-->
    <!--这一句话实质上是在为我们创建对象-->
    <!--@Service这个注解等同于下面这句话-->
    <!--<bean></bean>可以看做是一个map对象,id是key,class是value-->
    <!--这里面的User不是entity对象，entity由mybatis创建-->
    <!--<bean id="userService" class="com.qf.hua.spring.service.impl.UserServiceImpl" scope="singleton">
    </bean>-->

    <!--写了name就不要写id-->
    <!--scope默认所有的对象都是单例singleton    prototype创建普通对象-->
    <!--lazy-init懒加载是只有用到属性时才加载-->
    <!--<property name="" value=""></property>  name相当于url,value填写具体的地址如:jdbc://-->
    <!--property有三个属性 name属性的名称 value基本类型 ref指向容器另外一个对象-->
    <bean id="user" class="com.qf.hua.spring.bean.User"
        scope="prototype"
        init-method="init"
        destroy-method="destory"
        lazy-init="true">
        <!--这叫做Spring的依赖注入也叫控制反转。-->
        <property name="username" value="1111"/>
        <property name="address" ref="address"/>
        <property name="list" ref="list">
            <!--<list>
                <value>111</value>
                <value>222</value>
                <value>333</value>
                <value>444</value>
            </list>-->
        </property>
        <property name="map" ref="map">
            <!--<map>
                <entry key="1" value="h"/>
            </map>-->
        </property>
    </bean>

    <!--list和map的简写，简单了解-->
    <p:list id="list">
        <value>111</value>
    </p:list>

    <p:map id="map">
        <entry key="1" value="111"/>
    </p:map>

    <!--ref="address"当ref指向一个对象时，这个对象必须在容器里面，并且像下面这个一样定义-->
    <bean id="address" class="com.qf.hua.spring.bean.Address"/>
</beans>